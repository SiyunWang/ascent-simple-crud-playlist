openapi: "3.0.2"
info:
  title: API playlist
  description: 'This is a sample playlist server.'
  version: "1.0"
servers:
  - url: https://api.server.test/v1
tags:
  - name: songs
    description: Everything about your songs
paths:
  /songs:
    get:
      tags:
        - songs
      parameters:
        - name: name
          in: query
          description: name that need to be considered for filter
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/song'
        - name: artist
          in: query
          description: artist that need to be considered for filter
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/song'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/song'
        405:
          description: Invalid input
          content: { }
    post:
      tags:
        - songs
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/song'
          application/xml:
            schema:
              $ref: '#/components/schemas/song'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/song'
        405:
          description: Invalid input
          content: { }
  /songs/{songId}:
    delete:
      tags:
        - songs
      parameters:
        - name: songId
          in: path
          description: ID of song to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/song'
        400:
          description: Invalid ID supplied
          content: { }
        404:
          description: Song not found
          content: { }
    get:
      tags:
        - songs
      parameters:
        - name: songId
          in: path
          description: ID of song to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/song'
        400:
          description: Invalid ID supplied
          content: { }
        404:
          description: Song not found
          content: { }
    put:
      tags:
        - songs
      parameters:
        - name: songId
          in: path
          description: ID of song to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Song that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/song'
          application/xml:
            schema:
              $ref: '#/components/schemas/song'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/song'
        400:
          description: Invalid ID supplied
          content: { }
        404:
          description: Song not found
          content: { }

components:
  schemas:
    song:
      required:
        - id
        - name
        - artist
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Like a Rolling Stone
        artist:
          type: string
          example: Bob Dylan
        album:
          type: string
          example: Highway 61 Revisited

